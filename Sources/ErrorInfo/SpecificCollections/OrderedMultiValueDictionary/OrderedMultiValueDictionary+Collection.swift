//
//  OrderedMultiValueDictionary+Collection.swift
//  ErrorInfo
//
//  Created by Dmitriy Ignatyev on 06/10/2025.
//

extension OrderedMultiValueDictionary: Collection {
  public var count: Int { _entries.count }
  
  public var isEmpty: Bool { _entries.isEmpty }
}

extension OrderedMultiValueDictionary: RandomAccessCollection { // ! RandomAccessCollection
  public var startIndex: Int { _entries.startIndex }
  
  public var endIndex: Int { _entries.endIndex }
    
  public subscript(position: Int) -> Element { _entries[position] }
}

extension OrderedMultiValueDictionary {
  /// Returns a Boolean value indicating whether the sequence contains valuess for a given key that satisfies the given predicate.
  internal func containsValues<E>(forKey key: Key, where predicate: (Value) throws(E) -> Bool) rethrows -> Bool {
    if let allValuesForKeyIndices = _keyToEntryIndices[key] {
      // TODO: perfomance test
      // may be `switch indexSet case single(let index)` would be faster for single value
      // for multiple values  NonEmptyOrderedIndexSet has autogenerated Iterator, which iterates over `suncript(position:)` whicj switches
      // enum NonEmptyOrderedIndexSet._storage every time
      try allValuesForKeyIndices.contains(where: { index in
        return try predicate(_entries[index].value)
      })
    } else {
      false
    }
  }
}

/*
 TODO:
 1) conform it to DictionaryProtocol for using with Dict merge / addPrefix functions
 2) AllValuesForKeyView ~Escapable | RangeSet instaed IndexSet | entries without storing keys
 */
